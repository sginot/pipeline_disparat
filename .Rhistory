write.table(rbind(un_structures, sslice, thrs),
row.names = c("muscle", "mid_slice", "threshold"),
col.names = F,
file = "../parameters_goodfibes.csv",
sep = ",",
dec = ".")
setwd("..")
rdata_files <- list.files(pattern = "_goodfibes_output.RData")
rdata_files
getwd()
?strsub
?substr
library(GoodFibes)
#-------------------------------------------------------------------------------
# Define custom functions for regular expression manipulation
#-------------------------------------------------------------------------------
substrRight <- function(x, n){substr(x, nchar(x) - n + 1, nchar(x))}
rm.last.chr <- function(x, n) {
nc <- nchar(x)
brk <- nc - n
substr(x, 1, brk)
}
#-------------------------------------------------------------------------------
# Input working directory containing .png grayscale stacks of masked muscles
#-------------------------------------------------------------------------------
WD <- readline(prompt = "Input working directory (without quotes): ")
setwd(WD)
#-------------------------------------------------------------------------------
# File name manipulation
#-------------------------------------------------------------------------------
all_fil <- list.files()
sl <- rm.last.chr(all_fil, 9)
un_structures <- unique(sl)
#-------------------------------------------------------------------------------
# Loop through all muscles/segments to define the best threshold value and
# starting slice for each.
#-------------------------------------------------------------------------------
sq_thrs <- seq(from = 0.5, # Threshold values to explore can be modified here.
to = 0.9,   # Max range is from 0 to 1.
by = 0.1)
sslice <- thrs <- rep(NA, length(un_structures))
for (i in 1:length(un_structures)) {
f <- all_fil[which(sl == un_structures[i])]
fi <- file.info(f)
min_fi <- min(fi$size)
wmf <- which(fi$size > min_fi)
#start_slice <- wmf[1]
#end_slice <- wmf[length(wmf)]
mid_slice <- wmf[length(wmf)/2]
sslice[i] <- mid_slice
for (j in sq_thrs) {
x11()
thresholdPlot(images = f,
n = mid_slice,
threshold = j)
title(main = paste(un_structures[i], "Threshold =", j))}
thrs[i] <- as.numeric(readline(prompt = "Input best threshold value: "))
while (dev.cur() > 1) dev.off()
}
all_fil
sq_thres
sq_thrs
sslice <- thrs <- rep(NA, length(un_structures))
un_structures
getwd()
sq_thres
sq_thrs
sslice <- thrs <- rep(NA, length(un_structures))
for (i in 1:length(un_structures)) {
f <- all_fil[which(sl == un_structures[i])]
fi <- file.info(f)
min_fi <- min(fi$size)
wmf <- which(fi$size > min_fi)
#start_slice <- wmf[1]
#end_slice <- wmf[length(wmf)]
mid_slice <- wmf[length(wmf)/2]
sslice[i] <- mid_slice
for (j in sq_thrs) {
#x11()
thresholdPlot(images = f,
n = mid_slice,
threshold = j)
title(main = paste(un_structures[i], "Threshold =", j))
}
thrs[i] <- as.numeric(readline(prompt = "Input best threshold value: "))
while (dev.cur() > 1) dev.off()
}
sq_thrs <- seq(from = 0.3, # Threshold values to explore can be modified here.
to = 0.8,   # Max range is from 0 to 1.
by = 0.1)
sslice <- thrs <- rep(NA, length(un_structures))
for (i in 1:length(un_structures)) {
f <- all_fil[which(sl == un_structures[i])]
fi <- file.info(f)
min_fi <- min(fi$size)
wmf <- which(fi$size > min_fi)
#start_slice <- wmf[1]
#end_slice <- wmf[length(wmf)]
mid_slice <- wmf[length(wmf)/2]
sslice[i] <- mid_slice
for (j in sq_thrs) {
#x11()
thresholdPlot(images = f,
n = mid_slice,
threshold = j)
title(main = paste(un_structures[i], "Threshold =", j))
}
thrs[i] <- as.numeric(readline(prompt = "Input best threshold value: "))
while (dev.cur() > 1) dev.off()
}
write.table(rbind(un_structures, sslice, thrs),
row.names = c("muscle", "mid_slice", "threshold"),
col.names = F,
file = "../parameters_goodfibes.csv",
sep = ",",
dec = ".")
resolution <- as.numeric(readline(prompt = "Input voxel size: "))
nfibers <- as.numeric(readline(prompt = "Input number of fibers to reconstruct: "))
show.plot <- F
ls_results <- vector("list",
length = length(un_structures))
names(ls_results) <- un_structures
for (i in 1:length(un_structures)) {
print(paste("Analyzing muscle:", un_structures[i]))
f <- list.files(pattern = un_structures[i])
g <- good.fibes(images = f,
radius = 7,
zero.image = sslice[i],
threshold = thrs[i],
cutoff = thrs[i] - 0.05,
seeds = nfibers,
show.plot = show.plot)
fl <- fiber.lengths(fib.list = g,
res = resolution,
df = 2)
fa <- fiber.angle(fib.list = g,
axis = 1)
ls <- list(fibers = g, lengths = fl, angles = fa)
save(ls,
file = paste("../",
un_structures[i],
"_goodfibes_output.RData",
sep = ""))
#ls_results[[i]] <- ls
}
getwd()
setwd("..")
rdata_files <- list.files(pattern = "_goodfibes_output.RData")
rdata_files
for (i in 1:length(rdata_files)) {
o <- load(rdata_files[i])
struct <- gsub(pattern = "_goodfibes_output.RData",
replacement = "",
rdata_files[i])
fil <- paste("./fibers_stl/", struct, "_fibers.stl", sep = "")
muscle.plot.stl(fiber.list = o,
res = resolution,
df = 2,
save.plot = T,
file.name = fil,
mirror.axis = F)
}
rdata_files[i]
load(rdata_files[i])
o <- load(rdata_files[i])
o$ls
o
ls
o$lengths
rm(ls)
load(rdata_files[i])
?load
for (i in 1:length(rdata_files)) {
load(rdata_files[i])
o <- ls$fibers
struct <- gsub(pattern = "_goodfibes_output.RData",
replacement = "",
rdata_files[i])
fil <- paste("./fibers_stl/", struct, "_fibers.stl", sep = "")
muscle.plot.stl(fiber.list = o,
res = resolution,
df = 2,
save.plot = T,
file.name = fil,
mirror.axis = F)
}
library(GoodFibes)
#-------------------------------------------------------------------------------
# Define custom functions for regular expression manipulation
#-------------------------------------------------------------------------------
substrRight <- function(x, n){substr(x, nchar(x) - n + 1, nchar(x))}
rm.last.chr <- function(x, n) {
nc <- nchar(x)
brk <- nc - n
substr(x, 1, brk)
}
#-------------------------------------------------------------------------------
# Input working directory containing .png grayscale stacks of masked muscles
#-------------------------------------------------------------------------------
WD <- readline(prompt = "Input working directory (without quotes): ")
setwd(WD)
all_fil <- list.files()
sl <- rm.last.chr(all_fil, 9)
un_structures <- unique(sl)
#-------------------------------------------------------------------------------
# Loop through all muscles/segments to define the best threshold value and
# starting slice for each.
#-------------------------------------------------------------------------------
sq_thrs <- seq(from = 0.3, # Threshold values to explore can be modified here.
to = 0.9,   # Max range is from 0 to 1.
by = 0.1)
sslice <- thrs <- rep(NA, length(un_structures))
for (i in 1:length(un_structures)) {
f <- all_fil[which(sl == un_structures[i])]
fi <- file.info(f)
min_fi <- min(fi$size)
wmf <- which(fi$size > min_fi)
#start_slice <- wmf[1]
#end_slice <- wmf[length(wmf)]
mid_slice <- wmf[length(wmf)/2]
sslice[i] <- mid_slice
for (j in sq_thrs) {
#x11()
thresholdPlot(images = f,
n = mid_slice,
threshold = j)
title(main = paste(un_structures[i], "Threshold =", j))
}
thrs[i] <- as.numeric(readline(prompt = "Input best threshold value: "))
while (dev.cur() > 1) dev.off()
}
getwd()
WD
setwd(dir = "masked_muscles/")
getwd()
all_fil <- list.files()
sl <- rm.last.chr(all_fil, 9)
un_structures <- unique(sl)
#-------------------------------------------------------------------------------
# Loop through all muscles/segments to define the best threshold value and
# starting slice for each.
#-------------------------------------------------------------------------------
sq_thrs <- seq(from = 0.3, # Threshold values to explore can be modified here.
to = 0.9,   # Max range is from 0 to 1.
by = 0.1)
sslice <- thrs <- rep(NA, length(un_structures))
for (i in 1:length(un_structures)) {
f <- all_fil[which(sl == un_structures[i])]
fi <- file.info(f)
min_fi <- min(fi$size)
wmf <- which(fi$size > min_fi)
#start_slice <- wmf[1]
#end_slice <- wmf[length(wmf)]
mid_slice <- wmf[length(wmf)/2]
sslice[i] <- mid_slice
for (j in sq_thrs) {
#x11()
thresholdPlot(images = f,
n = mid_slice,
threshold = j)
title(main = paste(un_structures[i], "Threshold =", j))
}
thrs[i] <- as.numeric(readline(prompt = "Input best threshold value: "))
while (dev.cur() > 1) dev.off()
}
all_fil <- list.files()
sl <- rm.last.chr(all_fil, 9)
un_structures <- unique(sl)
sl
un_structures
sq_thrs <- seq(from = 0.3, # Threshold values to explore can be modified here.
to = 0.9,   # Max range is from 0 to 1.
by = 0.1)
sslice <- thrs <- rep(NA, length(un_structures))
for (i in 1:length(un_structures)) {
f <- all_fil[which(sl == un_structures[i])]
fi <- file.info(f)
min_fi <- min(fi$size)
wmf <- which(fi$size > min_fi)
#start_slice <- wmf[1]
#end_slice <- wmf[length(wmf)]
mid_slice <- wmf[length(wmf)/2]
sslice[i] <- mid_slice
for (j in sq_thrs) {
#x11()
thresholdPlot(images = f,
n = mid_slice,
threshold = j)
title(main = paste(un_structures[i], "Threshold =", j))
}
thrs[i] <- as.numeric(readline(prompt = "Input best threshold value: "))
while (dev.cur() > 1) dev.off()
}
all_fil <- list.files()
sl <- rm.last.chr(all_fil, 9)
un_structures <- unique(sl)
all_fil
getwd()
un_structures
sq_thrs <- seq(from = 0.3, # Threshold values to explore can be modified here.
to = 0.9,   # Max range is from 0 to 1.
by = 0.1)
sslice <- thrs <- rep(NA, length(un_structures))
for (i in 1:length(un_structures)) {
f <- all_fil[which(sl == un_structures[i])]
fi <- file.info(f)
min_fi <- min(fi$size)
wmf <- which(fi$size > min_fi)
#start_slice <- wmf[1]
#end_slice <- wmf[length(wmf)]
mid_slice <- wmf[length(wmf)/2]
sslice[i] <- mid_slice
for (j in sq_thrs) {
#x11()
thresholdPlot(images = f,
n = mid_slice,
threshold = j)
title(main = paste(un_structures[i], "Threshold =", j))
}
thrs[i] <- as.numeric(readline(prompt = "Input best threshold value: "))
while (dev.cur() > 1) dev.off()
}
write.table(rbind(un_structures, sslice, thrs),
row.names = c("muscle", "mid_slice", "threshold"),
col.names = F,
file = "../parameters_goodfibes.csv",
sep = ",",
dec = ".")
resolution <- as.numeric(readline(prompt = "Input voxel size: "))
resolution<-0.0153759*2
resolution
nfibers <- as.numeric(readline(prompt = "Input number of fibers to reconstruct: "))
show.plot <- F
ls_results <- vector("list",
length = length(un_structures))
names(ls_results) <- un_structures
for (i in 1:length(un_structures)) {
print(paste("Analyzing muscle:", un_structures[i]))
f <- list.files(pattern = un_structures[i])
g <- good.fibes(images = f,
radius = 7,
zero.image = sslice[i],
threshold = thrs[i],
cutoff = thrs[i] - 0.05,
seeds = nfibers,
show.plot = show.plot)
fl <- fiber.lengths(fib.list = g,
res = resolution,
df = 2)
fa <- fiber.angle(fib.list = g,
axis = 1)
ls <- list(fibers = g, lengths = fl, angles = fa)
save(ls,
file = paste("../",
un_structures[i],
"_goodfibes_output.RData",
sep = ""))
#ls_results[[i]] <- ls
}
un_structures
sslcie
sslice
thresholdPlot(images = f, n = 619, threshold = 0.2)
f
fi
i
length(un_structures)
print(paste("Analyzing muscle:", un_structures[i]))
f <- all_fil[which(sl == un_structures[i])]
g <- good.fibes(images = f,
radius = 7,
zero.image = sslice[i],
threshold = thrs[i],
cutoff = thrs[i] - 0.05,
seeds = nfibers,
show.plot = show.plot)
fl <- fiber.lengths(fib.list = g,
res = resolution,
df = 2)
fa <- fiber.angle(fib.list = g,
axis = 1)
ls <- list(fibers = g, lengths = fl, angles = fa)
save(ls,
file = paste("../",
un_structures[i],
"_goodfibes_output.RData",
sep = ""))
getwd()
setwd("..")
if (!dir.exists("./fibers_stl/")) {dir.create("./fibers_stl/")}
rdata_files <- list.files(pattern = "_goodfibes_output.RData")
for (i in 1:length(rdata_files)) {
load(rdata_files[i])
o <- ls$fibers
struct <- gsub(pattern = "_goodfibes_output.RData",
replacement = "",
rdata_files[i])
fil <- paste("./fibers_stl/", struct, "_fibers.stl", sep = "")
muscle.plot.stl(fiber.list = o,
res = resolution,
df = 2,
save.plot = T,
file.name = fil,
mirror.axis = F)
}
getwd()
WD <- readline(prompt = "Input working directory (without quotes): ")
setwd(WD)
getwd()
all_fil <- list.files()
sl <- rm.last.chr(all_fil, 9)
un_structures <- unique(sl)
un_structures
sq_thrs <- seq(from = 0.3, # Threshold values to explore can be modified here.
to = 0.9,   # Max range is from 0 to 1.
by = 0.1)
sslice <- thrs <- rep(NA, length(un_structures))
for (i in 1:length(un_structures)) {
f <- all_fil[which(sl == un_structures[i])]
fi <- file.info(f)
min_fi <- min(fi$size)
wmf <- which(fi$size > min_fi)
#start_slice <- wmf[1]
#end_slice <- wmf[length(wmf)]
mid_slice <- wmf[length(wmf)/2]
sslice[i] <- mid_slice
for (j in sq_thrs) {
#x11()
thresholdPlot(images = f,
n = mid_slice,
threshold = j)
title(main = paste(un_structures[i], "Threshold =", j))
}
thrs[i] <- as.numeric(readline(prompt = "Input best threshold value: "))
while (dev.cur() > 1) dev.off()
}
for (i in 1:length(un_structures)) {
f <- all_fil[which(sl == un_structures[i])]
fi <- file.info(f)
min_fi <- min(fi$size)
wmf <- which(fi$size > min_fi)
#start_slice <- wmf[1]
#end_slice <- wmf[length(wmf)]
mid_slice <- wmf[length(wmf)/2]
sslice[i] <- mid_slice
for (j in sq_thrs) {
#x11()
thresholdPlot(images = f,
n = mid_slice,
threshold = j)
title(main = paste(un_structures[i], "Threshold =", j))
}
thrs[i] <- as.numeric(readline(prompt = "Input best threshold value: "))
while (dev.cur() > 1) dev.off()
}
write.table(rbind(un_structures, sslice, thrs),
row.names = c("muscle", "mid_slice", "threshold"),
col.names = F,
file = "../parameters_goodfibes.csv",
sep = ",",
dec = ".")
resolution <- as.numeric(readline(prompt = "Input voxel size: "))
getwd()
nfibers <- as.numeric(readline(prompt = "Input number of fibers to reconstruct: "))
show.plot <- F
ls_results <- vector("list",
length = length(un_structures))
names(ls_results) <- un_structures
rm(list = c("f","g","fl","fa","ls"))
gc()
for (i in 1:length(un_structures)) {
print(paste("Analyzing muscle:", un_structures[i]))
f <- all_fil[which(sl == un_structures[i])]
g <- good.fibes(images = f,
radius = 7,
zero.image = sslice[i],
threshold = thrs[i],
cutoff = thrs[i] - 0.05,
seeds = nfibers,
show.plot = show.plot)
fl <- fiber.lengths(fib.list = g,
res = resolution,
df = 2)
fa <- fiber.angle(fib.list = g,
axis = 1)
ls <- list(fibers = g, lengths = fl, angles = fa)
save(ls,
file = paste("../",
un_structures[i],
"_goodfibes_output.RData",
sep = ""))
#ls_results[[i]] <- ls
}
setwd("..")
if (!dir.exists("./fibers_stl/")) {dir.create("./fibers_stl/")}
rdata_files <- list.files(pattern = "_goodfibes_output.RData")
rdata_files
for (i in 1:length(rdata_files)) {
load(rdata_files[i])
o <- ls$fibers
struct <- gsub(pattern = "_goodfibes_output.RData",
replacement = "",
rdata_files[i])
fil <- paste("./fibers_stl/", struct, "_fibers.stl", sep = "")
muscle.plot.stl(fiber.list = o,
res = resolution,
df = 2,
save.plot = T,
file.name = fil,
mirror.axis = F)
}
setwd("/home/samuel/Bureau/pipeline GoodFibes/")
